
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/z_other_tutorials/video_tutorial_model_1.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_tutorials_z_other_tutorials_video_tutorial_model_1.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_z_other_tutorials_video_tutorial_model_1.py:


Video Tutorial "code-along": Modeling step by step
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This tutorial demonstrates step-by-step geological modeling using the `gempy` and `gempy_viewer` libraries.
It follows the Video tutorial series available on the `gempy` YouTube channel (https://www.youtube.com/@GemPy3D).

.. GENERATED FROM PYTHON SOURCE LINES 11-19

Video tutorial 1: Introduction
""""""""""""""""""""""""""""""

The first video is an introduction to GemPy - please view online before starting the tutorial.

https://youtu.be/3elCCHhARsU



.. GENERATED FROM PYTHON SOURCE LINES 21-30

.. raw:: html

    <iframe width="560" height="315" 
            src="https://www.youtube.com/embed/3elCCHhARsU" 
            title="YouTube video player" 
            frameborder="0" 
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
            allowfullscreen>
    </iframe>

.. GENERATED FROM PYTHON SOURCE LINES 33-35

Video tutorial 2: Input data
""""""""""""""""""""""""""""

.. GENERATED FROM PYTHON SOURCE LINES 37-46

.. raw:: html

    <iframe width="560" height="315" 
            src="https://www.youtube.com/embed/yYwJVYy8ilw" 
            title="YouTube video player" 
            frameborder="0" 
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
            allowfullscreen>
    </iframe>

.. GENERATED FROM PYTHON SOURCE LINES 46-53

.. code-block:: Python




    # Required imports
    import gempy as gp
    import gempy_viewer as gpv








.. GENERATED FROM PYTHON SOURCE LINES 54-59

.. code-block:: Python


    # Path to input data
    data_path = "https://raw.githubusercontent.com/cgre-aachen/gempy_data/master/"
    path_to_data = data_path + "/data/input_data/video_tutorials_v3/"








.. GENERATED FROM PYTHON SOURCE LINES 60-71

.. code-block:: Python


    # Create instance of geomodel
    geo_model = gp.create_geomodel(
        project_name = 'tutorial_model',
        extent=[0,2500,0,1000,0,1000],
        resolution=[100,40,40],
        importer_helper=gp.data.ImporterHelper(
            path_to_orientations=path_to_data+"tutorial_model_orientations.csv",
            path_to_surface_points=path_to_data+"tutorial_model_surface_points.csv"
        )
    )




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Surface points hash:  7c6d3e04ab03a4b8324d9c91d56c30f9e6a7cb6c22c6f2ee69a5dd001c63337a
    Orientations hash:  63e42d294dec66b4db2f175bc7b58553ee89d68f3072d36402963c90b0ef5262




.. GENERATED FROM PYTHON SOURCE LINES 72-76

.. code-block:: Python


    # Display a basic cross section of input data
    gpv.plot_2d(geo_model)




.. image-sg:: /tutorials/z_other_tutorials/images/sphx_glr_video_tutorial_model_1_001.png
   :alt: Cell Number: mid Direction: y
   :srcset: /tutorials/z_other_tutorials/images/sphx_glr_video_tutorial_model_1_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <gempy_viewer.modules.plot_2d.visualization_2d.Plot2D object at 0x7fbc52024b20>



.. GENERATED FROM PYTHON SOURCE LINES 77-87

.. code-block:: Python


    # Manually add a surface point
    gp.add_surface_points(
        geo_model=geo_model,
        x=[2250],
        y=[500],
        z=[750],
        elements_names=['rock1']
    )






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

            <table>
              <tr><td>Structural Groups:</td><td>
        <table style="border-left:1.2px solid black;>
          <tr><th colspan="2"><b>StructuralGroup:</b></th></tr>
          <tr><td>Name:</td><td>default_formation</td></tr>
          <tr><td>Structural Relation:</td><td>StackRelationType.ERODE</td></tr>
          <tr><td>Elements:</td><td>
        <table width="50%" style="border-left:15px solid #015482;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>rock1</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #9f0052;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>rock2</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #ffbe00;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>rock3</td></tr>
        </table>
            </td></tr>
        </table>
            </td></tr>
              <tr><td>Fault Relations:</td><td><table style="border-collapse: collapse; table-layout: fixed;"><th></th><th style="transform: rotate(-35deg); height:150px; vertical-align: bottom; text-align: center;">default_fo...</th><tr><th>default_formation</th><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td></tr></table></td></tr>
              <tr><td></td><td>
            <table>
              <tr>
                <td><div style="display: inline-block; background-color: #527682; width: 20px; height: 20px; border: 1px solid black;"></div> True</td>
                <td><div style="display: inline-block; background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></div> False</td>
              </tr>
            </table>
            </td></tr>
            </table>
        
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 88-92

.. code-block:: Python


    # Show added point in cross section
    gpv.plot_2d(geo_model)




.. image-sg:: /tutorials/z_other_tutorials/images/sphx_glr_video_tutorial_model_1_002.png
   :alt: Cell Number: mid Direction: y
   :srcset: /tutorials/z_other_tutorials/images/sphx_glr_video_tutorial_model_1_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <gempy_viewer.modules.plot_2d.visualization_2d.Plot2D object at 0x7fbc51faea10>



.. GENERATED FROM PYTHON SOURCE LINES 93-95

Video tutorial 3: Structural frame
""""""""""""""""""""""""""""""""""

.. GENERATED FROM PYTHON SOURCE LINES 97-106

.. raw:: html

    <iframe width="560" height="315" 
            src="https://www.youtube.com/embed/4rav3lb2AR8" 
            title="YouTube video player" 
            frameborder="0" 
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
            allowfullscreen>
    </iframe>

.. GENERATED FROM PYTHON SOURCE LINES 106-110

.. code-block:: Python


    # View structural frame
    geo_model.structural_frame






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

            <table>
              <tr><td>Structural Groups:</td><td>
        <table style="border-left:1.2px solid black;>
          <tr><th colspan="2"><b>StructuralGroup:</b></th></tr>
          <tr><td>Name:</td><td>default_formation</td></tr>
          <tr><td>Structural Relation:</td><td>StackRelationType.ERODE</td></tr>
          <tr><td>Elements:</td><td>
        <table width="50%" style="border-left:15px solid #015482;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>rock1</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #9f0052;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>rock2</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #ffbe00;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>rock3</td></tr>
        </table>
            </td></tr>
        </table>
            </td></tr>
              <tr><td>Fault Relations:</td><td><table style="border-collapse: collapse; table-layout: fixed;"><th></th><th style="transform: rotate(-35deg); height:150px; vertical-align: bottom; text-align: center;">default_fo...</th><tr><th>default_formation</th><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td></tr></table></td></tr>
              <tr><td></td><td>
            <table>
              <tr>
                <td><div style="display: inline-block; background-color: #527682; width: 20px; height: 20px; border: 1px solid black;"></div> True</td>
                <td><div style="display: inline-block; background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></div> False</td>
              </tr>
            </table>
            </td></tr>
            </table>
        
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 111-115

.. code-block:: Python


    # View structural elements
    geo_model.structural_frame.structural_elements





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    [Element(
    	name=rock1,
    	color=#015482,
    	is_active=True
    ), Element(
    	name=rock2,
    	color=#9f0052,
    	is_active=True
    ), Element(
    	name=rock3,
    	color=#ffbe00,
    	is_active=True
    ), Element(
    	name=basement,
    	color=#728f02,
    	is_active=True
    )]



.. GENERATED FROM PYTHON SOURCE LINES 116-126

.. code-block:: Python


    # Define structural groups and age/stratigraphic relationship
    gp.map_stack_to_surfaces(
        gempy_model=geo_model,
        mapping_object={
            "Strat_Series2": ("rock3"),
            "Strat_Series1": ("rock2", "rock1")
        }
    )






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

            <table>
              <tr><td>Structural Groups:</td><td>
        <table style="border-left:1.2px solid black;>
          <tr><th colspan="2"><b>StructuralGroup:</b></th></tr>
          <tr><td>Name:</td><td>Strat_Series2</td></tr>
          <tr><td>Structural Relation:</td><td>StackRelationType.ERODE</td></tr>
          <tr><td>Elements:</td><td>
        <table width="50%" style="border-left:15px solid #ffbe00;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>rock3</td></tr>
        </table>
            </td></tr>
        </table>
            <br>
        <table style="border-left:1.2px solid black;>
          <tr><th colspan="2"><b>StructuralGroup:</b></th></tr>
          <tr><td>Name:</td><td>Strat_Series1</td></tr>
          <tr><td>Structural Relation:</td><td>StackRelationType.ERODE</td></tr>
          <tr><td>Elements:</td><td>
        <table width="50%" style="border-left:15px solid #9f0052;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>rock2</td></tr>
        </table>
            <br>
        <table width="50%" style="border-left:15px solid #015482;">
          <tr><th colspan="2"><b>StructuralElement:</b></th></tr>
          <tr><td>Name:</td><td>rock1</td></tr>
        </table>
            </td></tr>
        </table>
            </td></tr>
              <tr><td>Fault Relations:</td><td><table style="border-collapse: collapse; table-layout: fixed;"><th></th><th style="transform: rotate(-35deg); height:150px; vertical-align: bottom; text-align: center;">Strat_Seri...</th><th style="transform: rotate(-35deg); height:150px; vertical-align: bottom; text-align: center;">Strat_Seri...</th><tr><th>Strat_Series2</th><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td></tr><tr><th>Strat_Series1</th><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td><td style="background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></td></tr></table></td></tr>
              <tr><td></td><td>
            <table>
              <tr>
                <td><div style="display: inline-block; background-color: #527682; width: 20px; height: 20px; border: 1px solid black;"></div> True</td>
                <td><div style="display: inline-block; background-color: #FFB6C1; width: 20px; height: 20px; border: 1px solid black;"></div> False</td>
              </tr>
            </table>
            </td></tr>
            </table>
        
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 127-129

Video tutorial 4: Computation and results
"""""""""""""""""""""""""""""""""""""""""

.. GENERATED FROM PYTHON SOURCE LINES 129-133

.. code-block:: Python


    # View interpolation options
    geo_model.interpolation_options






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

                    <table>
                        <tr><td colspan='2' style='text-align:center'><b>InterpolationOptions</b></td></tr>
                        <tr><td>kernel_options</td><td>{'range': 1.7, 'c_o': 10, 'uni_degree': 1, 'i_res': 4, 'gi_res': 2, 'number_dimensions': 3, 'kernel_function': <AvailableKernelFunctions.cubic: KernelFunction(base_function=<function cubic_function at 0x7fbc62cb1bd0>, derivative_div_r=<function cubic_function_p_div_r at 0x7fbc62cb1e10>, second_derivative=<function cubic_function_a at 0x7fbc62cb1ea0>, consume_sq_distance=False)>, 'kernel_solver': <Solvers.DEFAULT: 1>, 'compute_condition_number': False, 'optimizing_condition_number': False, 'condition_number': None}</td></tr><tr><td>evaluation_options</td><td>{'_number_octree_levels': 1, '_number_octree_levels_surface': 4, 'octree_curvature_threshold': -1, 'octree_error_threshold': 1.0, 'octree_min_level': 2, 'mesh_extraction': True, 'mesh_extraction_masking_options': <MeshExtractionMaskingOptions.INTERSECT: 3>, 'mesh_extraction_fancy': True, 'evaluation_chunk_size': 500000, 'compute_scalar_gradient': False, 'verbose': False}</td></tr><tr><td>temp_interpolation_values</td><td><gempy_engine.core.data.options.temp_interpolation_values.TempInterpolationValues object at 0x7fbc30dccc10></td></tr><tr><td>debug</td><td>True</td></tr><tr><td>cache_mode</td><td>CacheMode.IN_MEMORY_CACHE</td></tr><tr><td>cache_model_name</td><td>tutorial_model</td></tr><tr><td>block_solutions_type</td><td>BlockSolutionType.DENSE_GRID</td></tr><tr><td>sigmoid_slope</td><td>50000</td></tr><tr><td>debug_water_tight</td><td>False</td></tr>
                    </table>
                
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 134-138

.. code-block:: Python


    # Compute a solution for the model
    gp.compute_model(geo_model)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Setting Backend To: AvailableBackends.numpy
    Chunking done: 7 chunks
    Chunking done: 30 chunks


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <b>Solutions:</b> 4 Octree Levels, 3 DualContouringMeshes
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-143

.. code-block:: Python


    # Display the result in 2d section
    gpv.plot_2d(geo_model, cell_number=20)




.. image-sg:: /tutorials/z_other_tutorials/images/sphx_glr_video_tutorial_model_1_003.png
   :alt: Cell Number: 20 Direction: y
   :srcset: /tutorials/z_other_tutorials/images/sphx_glr_video_tutorial_model_1_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <gempy_viewer.modules.plot_2d.visualization_2d.Plot2D object at 0x7fbbf8801000>



.. GENERATED FROM PYTHON SOURCE LINES 144-149

.. code-block:: Python


    # Some examples of how to access results
    print(geo_model.solutions.raw_arrays.lith_block)
    print(geo_model.grid.dense_grid.values)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [4 4 4 ... 1 1 1]
    [[  12.5   12.5   12.5]
     [  12.5   12.5   37.5]
     [  12.5   12.5   62.5]
     ...
     [2487.5  987.5  937.5]
     [2487.5  987.5  962.5]
     [2487.5  987.5  987.5]]




.. GENERATED FROM PYTHON SOURCE LINES 150-152

Video tutorial 5: 2D visualization
""""""""""""""""""""""""""""""""""

.. GENERATED FROM PYTHON SOURCE LINES 152-156

.. code-block:: Python


    # 2d plotting options
    gpv.plot_2d(geo_model, show_value=True, show_lith=False, show_scalar=True, series_n=1, cell_number=25)




.. image-sg:: /tutorials/z_other_tutorials/images/sphx_glr_video_tutorial_model_1_004.png
   :alt: Cell Number: 25 Direction: y
   :srcset: /tutorials/z_other_tutorials/images/sphx_glr_video_tutorial_model_1_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <gempy_viewer.modules.plot_2d.visualization_2d.Plot2D object at 0x7fbbfb422a70>



.. GENERATED FROM PYTHON SOURCE LINES 157-167

.. code-block:: Python


    # Create custom section lines
    gp.set_section_grid(
        grid=geo_model.grid,
        section_dict={
            'section1': ([0, 0], [2500, 1000], [100, 50]),
            'section2': ([1000, 1000], [1500, 0], [100, 100]),
        }
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Active grids: GridTypes.NONE|SECTIONS|DENSE


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>start</th>
          <th>stop</th>
          <th>resolution</th>
          <th>dist</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>section1</th>
          <td>[0, 0]</td>
          <td>[2500, 1000]</td>
          <td>[100, 50]</td>
          <td>2692.58</td>
        </tr>
        <tr>
          <th>section2</th>
          <td>[1000, 1000]</td>
          <td>[1500, 0]</td>
          <td>[100, 100]</td>
          <td>1118.03</td>
        </tr>
      </tbody>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 168-172

.. code-block:: Python


    # Show custom cross-section traces
    gpv.plot_section_traces(geo_model)




.. image-sg:: /tutorials/z_other_tutorials/images/sphx_glr_video_tutorial_model_1_005.png
   :alt: Cell Number: -1 Direction: z
   :srcset: /tutorials/z_other_tutorials/images/sphx_glr_video_tutorial_model_1_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <function plot_section_traces at 0x7fbc63452830>



.. GENERATED FROM PYTHON SOURCE LINES 173-177

.. code-block:: Python


    # Recompute model as a new grid was added
    gp.compute_model(geo_model)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Setting Backend To: AvailableBackends.numpy
    Chunking done: 8 chunks
    Chunking done: 33 chunks


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <b>Solutions:</b> 4 Octree Levels, 3 DualContouringMeshes
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 178-182

.. code-block:: Python


    # Display custom cross-sections
    gpv.plot_2d(geo_model, section_names=['section1', 'section2'], show_data=False)




.. image-sg:: /tutorials/z_other_tutorials/images/sphx_glr_video_tutorial_model_1_006.png
   :alt: section1, section2
   :srcset: /tutorials/z_other_tutorials/images/sphx_glr_video_tutorial_model_1_006.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <gempy_viewer.modules.plot_2d.visualization_2d.Plot2D object at 0x7fbc65469090>



.. GENERATED FROM PYTHON SOURCE LINES 183-185

Video tutorial 6: 3D visualization
""""""""""""""""""""""""""""""""""

.. GENERATED FROM PYTHON SOURCE LINES 185-189

.. code-block:: Python


    # Display the result in 3d
    gpv.plot_3d(geo_model, show_lith=True, show_boundaries=True, ve=None)




.. image-sg:: /tutorials/z_other_tutorials/images/sphx_glr_video_tutorial_model_1_007.png
   :alt: video tutorial model 1
   :srcset: /tutorials/z_other_tutorials/images/sphx_glr_video_tutorial_model_1_007.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <gempy_viewer.modules.plot_3d.vista.GemPyToVista object at 0x7fbc31c9bfa0>



.. GENERATED FROM PYTHON SOURCE LINES 190-194

.. code-block:: Python


    # How to access DC meshes
    geo_model.solutions.dc_meshes[0].dc_data





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    DualContouringData(xyz_on_edge=array([[-0.249999 , -0.124999 ,  0.06875  ],
           [-0.249999 , -0.109374 ,  0.06875  ],
           [-0.2109365, -0.124999 ,  0.06875  ],
           ...,
           [ 0.3359385,  0.125001 ,  0.06875  ],
           [ 0.375001 ,  0.109376 ,  0.06875  ],
           [ 0.375001 ,  0.125001 ,  0.06875  ]]), valid_edges=array([[False, False, False, ...,  True,  True,  True],
           [False, False, False, ..., False, False, False],
           [False, False, False, ...,  True,  True,  True],
           ...,
           [False, False, False, ..., False, False, False],
           [False, False, False, ..., False, False, False],
           [False, False, False, ..., False, False, False]]), xyz_on_centers=array([[-0.23046775, -0.1171865 ,  0.0640635 ],
           [-0.23046775, -0.1171865 ,  0.0796885 ],
           [-0.23046775, -0.1015615 ,  0.0640635 ],
           ...,
           [ 0.35546975,  0.1015635 ,  0.1109385 ],
           [ 0.35546975,  0.1171885 ,  0.0953135 ],
           [ 0.35546975,  0.1171885 ,  0.1109385 ]]), dxdydz=(0.03906249999999999, 0.015625, 0.015625), exported_fields_on_edges=ExportedFields(_scalar_field=array([0.1375, 0.1375, 0.1375, ..., 0.137 , 0.137 , 0.1125]), _gx_field=array([0., 0., 0., ..., 0., 0., 0.]), _gy_field=array([0., 0., 0., ..., 0., 0., 0.]), _gz_field=array([1., 1., 1., ..., 1., 1., 1.]), _n_points_per_surface=array([0]), _slice_feature=slice(0, 15, None), _grid_size=1024, _scalar_field_at_surface_points=None, scalar_field_at_fault_shell=None), n_surfaces_to_export=1, _gradients=array([[0., 0., 1.],
           [0., 0., 1.],
           [0., 0., 1.],
           ...,
           [0., 0., 1.],
           [0., 0., 1.],
           [0., 0., 1.]]), tree_depth=4, mask=None, bias_center_mass=None, bias_normals=None)



.. GENERATED FROM PYTHON SOURCE LINES 195-197

Video tutorial 7: Topography
"""""""""""""""""""""""""""""""

.. GENERATED FROM PYTHON SOURCE LINES 197-208

.. code-block:: Python


    # Setting a randomly generated topography
    import numpy as np

    gp.set_topography_from_random(
        grid=geo_model.grid,
        fractal_dimension=1.2,
        d_z=np.array([700, 900]),
        topography_resolution=np.array([250, 100])
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Active grids: GridTypes.NONE|SECTIONS|TOPOGRAPHY|DENSE

    <gempy.core.data.grid_modules.topography.Topography object at 0x7fbbf978aec0>



.. GENERATED FROM PYTHON SOURCE LINES 209-213

.. code-block:: Python


    # Recompute model as a new grid was added
    gp.compute_model(geo_model)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Setting Backend To: AvailableBackends.numpy
    Chunking done: 9 chunks
    Chunking done: 37 chunks


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <b>Solutions:</b> 4 Octree Levels, 3 DualContouringMeshes
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 214-218

.. code-block:: Python


    # Display a cross-section with topography
    gpv.plot_2d(geo_model, show_topography=True)




.. image-sg:: /tutorials/z_other_tutorials/images/sphx_glr_video_tutorial_model_1_008.png
   :alt: Cell Number: mid Direction: y
   :srcset: /tutorials/z_other_tutorials/images/sphx_glr_video_tutorial_model_1_008.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <gempy_viewer.modules.plot_2d.visualization_2d.Plot2D object at 0x7fbbd2e8c850>



.. GENERATED FROM PYTHON SOURCE LINES 219-223

.. code-block:: Python


    # Displaying a geological map
    gpv.plot_2d(geo_model, show_topography=True, section_names=['topography'], show_boundaries=False, show_data=False)




.. image-sg:: /tutorials/z_other_tutorials/images/sphx_glr_video_tutorial_model_1_009.png
   :alt: Geological map
   :srcset: /tutorials/z_other_tutorials/images/sphx_glr_video_tutorial_model_1_009.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <gempy_viewer.modules.plot_2d.visualization_2d.Plot2D object at 0x7fbbfb492e00>



.. GENERATED FROM PYTHON SOURCE LINES 224-229

.. code-block:: Python


    # Display the 3d model with topography
    gpv.plot_3d(geo_model, show_lith=True, show_topography=True)

    # sphinx_gallery_thumbnail_number = -1



.. image-sg:: /tutorials/z_other_tutorials/images/sphx_glr_video_tutorial_model_1_010.png
   :alt: video tutorial model 1
   :srcset: /tutorials/z_other_tutorials/images/sphx_glr_video_tutorial_model_1_010.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <gempy_viewer.modules.plot_3d.vista.GemPyToVista object at 0x7fbc533c54b0>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (3 minutes 2.323 seconds)


.. _sphx_glr_download_tutorials_z_other_tutorials_video_tutorial_model_1.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: video_tutorial_model_1.ipynb <video_tutorial_model_1.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: video_tutorial_model_1.py <video_tutorial_model_1.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: video_tutorial_model_1.zip <video_tutorial_model_1.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
